#include <kipr/wombat.h>
void lift0(int t);
void lower0(int t);
void lift1(int t);
void lower1(int t);
void lift2(int t);
void lower2(int t);


int main()
{
    //lift0(1000);
    //lower0(1000);
    lift1(5000);
    /*lift1(1000);
    lower1(1000);
    lift2(2000);
    lower2(2000);*/
    return 0;
}
void lift0(int t){
    t-=50;
    msleep(10);
    move_at_velocity(0,0);
    move_at_velocity(0,500);
    double count=0,pos=gmpc(0);
    while(count<t){
        pos=gmpc(0);
        msleep(t/500.0);
        if(gmpc(0)<pos)
            move_at_velocity(0,0);
        count+=t/500.0;
    }
    move_at_velocity(0,0);
    msleep(40);
}
void lower0(int t){
    t-=50;
    msleep(10);
    move_at_velocity(0,0);
    move_at_velocity(0,-500);
    double count=0,pos=gmpc(0);
    while(count<t){
        pos=gmpc(0);
        msleep(t/500.0);
        if(gmpc(0)>pos)
            move_at_velocity(0,0);
        count+=t/500.0;
    }
    move_at_velocity(0,0);
    msleep(40);
}
void lift1(int t){
    t-=50;
    msleep(10);
    move_at_velocity(1,500);
    double count=0,pos=gmpc(1);
    while(count<t){
        pos=gmpc(1);
        msleep(t/500.0);
        if(gmpc(1)<pos)
            move_at_velocity(1,0);
        count+=t/500.0;
    }
    move_at_velocity(1,0);
    msleep(40);
}
void lower1(int t){
    t-=50;
    move_at_velocity(1,-500);
    double count=0,pos=gmpc(1);
    while(count<t){
        pos=gmpc(1);
        msleep(t/500.0);
        if(gmpc(1)>pos)
            move_at_velocity(1,0);
        count+=t/500.0;
    }
    move_at_velocity(1,0);
    msleep(40);
}
void lift2(int t){
    t-=50;
    move_at_velocity(2,500);
    double count=0,pos=gmpc(2);
    while(count<t){
        pos=gmpc(2);
        msleep(t/500.0);
        if(gmpc(2)<pos)
            move_at_velocity(2,0);
        count+=t/500.0;
    }
    move_at_velocity(2,0);
    msleep(40);
}
void lower2(int t){
    t-=50;
    move_at_velocity(2,-500);
    double count=0,pos=gmpc(2);
    while(count<t){
        pos=gmpc(2);
        msleep(t/500.0);
        if(gmpc(2)>pos)
            move_at_velocity(2,0);
        count+=t/500.0;
    }
    move_at_velocity(2,0);
    msleep(40);
}


